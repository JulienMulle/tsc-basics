/*
1- Cr√©er une classe "Car". Cette classe poss√®de : 8 propri√©t√©s : - brand - model - color - horsePower - fuelType - wheels - isOn - currentGear 7 m√©thodes - turnContactOn() - turnContactOff() - accelerate() - brake() - openSunRoof() - turnOnFourWheelDriving() - turnOffFourWheelDriving()

2- Cr√©er 2 interfaces :

L'interface "SportCar" qui poss√®de des propri√©t√©s et des m√©thodes propres √† une voiture de sport :

isSportModeActivated

hasGearsOnSteeringWheel

totalGears;

ExhaustPipesNumber

turnOnSportMode()

L'interface "SuvCar" qui poss√®de des propri√©t√©s propres √† un SUV :

heightFromTheGround
hasLeatherSeats
√Ä vous d'√©crire ce que fait chaque m√©thode (celles de la classe Car ainsi que celle de l'interface SportCar). Soyez logiques üòé

3- Intancier 2 objets depuis la classe Vehicle :

Le premier sera une voiture de sport: il devra donc impl√©menter l'interface SportCar
Le second sera une voiture SUV : il devra donc impl√©menter l'interface SuvCar
4- Jouer avec les m√©thodes des objets : d√©marrer, arr√™ter, acc√©l√©rer, passer en mode sport, etc...
*/

//1-
class Car{
    private brand: string;
    private model: string;
    private color: string;
    private horsePower: number;
    private fuelType: string;
    private wheels: number;
    private isOn: boolean;
    private currentGear: number;
   
    constructor(brand: string, model: string, color: string, horsePower: number, fuelType: string){
        this.brand = brand;
        this.model = model;
        this.color = color;
        this.horsePower = horsePower;
        this.fuelType = fuelType;
        this.isOn = false;
        this.currentGear = 0;
    }

    public turnContactOn(){
        this.isOn = true;
    };

    public turnContactOff(){
        this.isOn = false
    };
    
    public accelerate(){

    };

    public brake(){

    };

    public openSunRoof(){

    };

    public turnOnFourWheelDriving(){

    };

    public turnOffFourWheelDriving(){

    }

};

class SportCar extends Car{

}

class SuvCar extends Car{

}

//2-

interface SportCar{
    isSportModeActived: boolean;
    hasGearsOnSteeringWheel: number;
    totalGears: number;
    exhaustPipesNumber: number;
    turnOnSportMo
};

interface SuvCar{

}

